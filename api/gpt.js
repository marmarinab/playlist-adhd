export default async function handler(req, res) {
  if (req.method !== "POST") {
    return res.status(405).json({ error: "Method not allowed" });
  }

  try {
    const { message } = req.body;

    const response = await fetch(
      "https://llm.api.cloud.yandex.net/foundationModels/v1/completion",
      {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          Authorization: `Api-Key ${process.env.YANDEX_API_KEY}`,
        },
        body: JSON.stringify({
          modelUri: "gpt://b1gb6krr62cm50g0u83l/yandexgpt-lite",
          completionOptions: {
            stream: false,
            temperature: 0.6,
            maxTokens: 150,
          },
          messages: [
            { role: "system", text: "–¢—ã ‚Äî –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç —á–µ–ª–æ–≤–µ–∫—É —Å –°–î–í–ì —Å–ø—Ä–∞–≤–ª—è—Ç—å—Å—è —Å –∑–∞–¥–∞—á–∞–º–∏. \
–î–µ–ª–∞–π –æ—Ç–≤–µ—Ç—ã –∫—Ä–∞—Ç–∫–∏–º–∏ –∏ –ø—Ä–∞–∫—Ç–∏—á–Ω—ã–º–∏. –ú–∞–∫—Å–∏–º—É–º 5 —à–∞–≥–æ–≤, –∫–∞–∂–¥—ã–π —à–∞–≥ ‚Äî 1 —Å—Ç—Ä–æ–∫–∞. \
–ï—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –¥–ª–∏–Ω–Ω—ã–π, –¥–µ–ª–∞–π –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –æ—Ç–¥–µ–ª—å–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º." },
            { role: "user", text: message },
          ],
        }),
      }
    );

    if (!response.ok) {
      const errText = await response.text();
      return res.status(response.status).json({ error: errText });
    }

    const data = await response.json();
    const reply = data.result?.alternatives?.[0]?.message?.text || "ü§î –ù–µ—Ç –æ—Ç–≤–µ—Ç–∞";

    return res.status(200).json({ reply });
  } catch (error) {
    console.error("Vercel API error:", error);
    return res.status(500).json({ error: "Server error" });
  }
}
